version: '3.8'

services:
  litellm:
    build:
      context: .
      dockerfile: Dockerfile
    image: litellm-custom:latest
    container_name: litellm
    restart: unless-stopped
    networks:
      - litellm-net      # For MCP proxy access (isolated)
      - traefik-proxy    # For HTTPS ingress
      - postgres-net     # For database access
      - redis-net        # For caching
      - keycloak-net     # For SSO (future)
    ports:
      # No external port exposure - Traefik handles HTTPS
      # Internal port 4000 accessible only via Docker networks
      - "127.0.0.1:4000:4000"  # Only bind to localhost for admin access
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - litellm-data:/app/data
      - /home/administrator/projects:/workspace/projects:ro
      - /home/administrator/mcp-scratch:/workspace/mcp-scratch
    env_file:
      - /home/administrator/secrets/litellm.env
    command: ["--config", "/app/config.yaml", "--port", "4000"]
    environment:
      # Override any specific environment variables here
      - PORT=4000
      - LITELLM_MODE=PRODUCTION
    labels:
      # Traefik configuration for HTTPS
      - "traefik.enable=true"
      # External host: open UI/docs assets, secure API
      - "traefik.http.routers.litellm-open.rule=Host(`litellm.ai-servicers.com`) && (PathPrefix(`/ui`) || PathPrefix(`/swagger`) || PathPrefix(`/docs`) || Path(`/openapi.json`) || PathPrefix(`/litellm-asset-prefix`) || Path(`/favicon.ico`) || Path(`/schedule/model_cost_map_reload/status`))"
      - "traefik.http.routers.litellm-open.priority=20"
      - "traefik.http.routers.litellm-open.entrypoints=websecure"
      - "traefik.http.routers.litellm-open.tls=true"
      - "traefik.http.routers.litellm-open.tls.certresolver=letsencrypt"
      - "traefik.http.routers.litellm-open.service=litellm"
      - "traefik.http.routers.litellm-status.rule=Host(`litellm.ai-servicers.com`) && Path(`/schedule/model_cost_map_reload/status`)"
      - "traefik.http.routers.litellm-status.priority=60"
      - "traefik.http.routers.litellm-status.entrypoints=websecure"
      - "traefik.http.routers.litellm-status.tls=true"
      - "traefik.http.routers.litellm-status.tls.certresolver=letsencrypt"
      - "traefik.http.routers.litellm-status.service=litellm"
      - "traefik.http.routers.litellm-status.middlewares=litellm-status-auth"
      - "traefik.http.routers.litellm-api.rule=Host(`litellm.ai-servicers.com`) && HeaderRegexp(`Authorization`, `^Bearer\\s+.+`)"
      - "traefik.http.routers.litellm-api.priority=50"
      - "traefik.http.routers.litellm-api.entrypoints=websecure"
      - "traefik.http.routers.litellm-api.tls=true"
      - "traefik.http.routers.litellm-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.litellm-api.service=litellm"
      - "traefik.http.services.litellm.loadbalancer.server.port=4000"
      - "traefik.docker.network=traefik-proxy"
      # Internal host: open UI/docs assets, secure API
      - "traefik.http.routers.litellm-internal-open.rule=Host(`litellm.linuxserver.lan`) && (PathPrefix(`/ui`) || PathPrefix(`/swagger`) || PathPrefix(`/docs`) || Path(`/openapi.json`) || PathPrefix(`/litellm-asset-prefix`) || Path(`/favicon.ico`) || Path(`/schedule/model_cost_map_reload/status`))"
      - "traefik.http.routers.litellm-internal-open.priority=20"
      - "traefik.http.routers.litellm-internal-open.entrypoints=web"
      - "traefik.http.routers.litellm-internal-open.service=litellm"
      - "traefik.http.routers.litellm-internal.rule=Host(`litellm.linuxserver.lan`) && HeaderRegexp(`Authorization`, `^Bearer\\s+.+`)"
      - "traefik.http.routers.litellm-internal.priority=50"
      - "traefik.http.routers.litellm-internal.entrypoints=web"
      - "traefik.http.routers.litellm-internal.service=litellm"
      - "traefik.http.routers.litellm-internal-status.rule=Host(`litellm.linuxserver.lan`) && Path(`/schedule/model_cost_map_reload/status`)"
      - "traefik.http.routers.litellm-internal-status.priority=60"
      - "traefik.http.routers.litellm-internal-status.entrypoints=web"
      - "traefik.http.routers.litellm-internal-status.service=litellm"
      - "traefik.http.routers.litellm-internal-status.middlewares=litellm-status-auth"
      - "traefik.http.middlewares.litellm-status-auth.headers.customrequestheaders.Authorization=Bearer sk-e0b742bc6575adf26c7d356c49c78d8fd08119fcde1d6e188d753999b5f956fc"
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import requests, sys; sys.exit(0 if requests.get('http://localhost:4000', timeout=5).status_code == 200 else 1)\""]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  litellm-data:
    name: litellm-data

networks:
  litellm-net:
    external: true
  traefik-proxy:
    external: true
  postgres-net:
    external: true
  redis-net:
    external: true
  keycloak-net:
    external: true
